(1) LSB The expression x & (-x) clears all but the least-significant 1 bit,
(2) MSB

    msb = 1 << (BITS - 1);
    /* Perform bitwise AND with msb and num */
    if(num & msb)
        printf("MSB of %d is set (1).", num);
    else
        printf("MSB of %d is unset (0).", num);

(2) if N is power of 2! N & ( N - 1)
(3) modulo! pos = ++pos; pos &= (N - 1)

(4) bool odd(int n) { return n & 0x1; }
(5) int half(int n) { return n >> 1; }