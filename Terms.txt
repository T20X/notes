virtual function - enables overriding implementation of a function in the derived class by calling it from the base class interface
------------------
Next time somebody tells you that you should never use multiple inheritance, look them straight in the eye and say, “One size does not fit all.” If they respond with something about their bad experience on their project, look them in the eye and repeat, slower this time, “One size does not fit all.”
---------------------
An object's class defines how the object is implemented .The class defines object's internal state and the implementation of its operations.

In contrast, an object's type only refers to its interface - a set of requests to which it can respond.
An object can have many types, and objects of different classes can have the same type.

------------
An object, in C++, is a region of storage that has

- size (can be determined with sizeof);
- alignment requirement (can be determined with alignof);
- storage duration (automatic, static, dynamic, thread-local);
- lifetime (bounded by storage duration or temporary);
type;
- value (which may be indeterminate, e.g. for default-initialized non-class types);
optionally, a name.
----------------
closure: an unnamed function object capable of capturing variables in scope