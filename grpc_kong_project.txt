https://github.com/cloudendpoints/esp/issues/395 - bug in nginx
https://trac.nginx.org/nginx/ticket/1792
https://github.com/Kong/kong/issues/5502
https://trac.nginx.org/nginx/ticket/1887

export GRPC_VERBOSITY=debug


server = grpc.server(
    futures.ThreadPoolExecutor(max_workers=10),
    options=(
        ('grpc.keepalive_time_ms', 10000),
        # send keepalive ping every 10 second, default is 2 hours
        ('grpc.keepalive_timeout_ms', 5000),
        # keepalive ping time out after 5 seconds, default is 20 seoncds
        ('grpc.keepalive_permit_without_calls', True),
        # allow keepalive pings when there's no gRPC calls
        ('grpc.http2.max_pings_without_data', 0),
        # allow unlimited amount of keepalive pings without data
        ('grpc.http2.min_time_between_pings_ms', 10000),
        # allow grpc pings from client every 10 seconds
        ('grpc.http2.min_ping_interval_without_data_ms',  5000),
        # allow grpc pings from client without data every 5 seconds
    )
)
On the client- side, we change the client initializer code to include keepalive options:

def connect!
  @stub = Stub.new(
      'localhost:50051', :this_channel_is_insecure,
      channel_args: {
        'grpc.keepalive_time_ms': 10000,
        'grpc.keepalive_timeout_ms': 5000,
        'grpc.keepalive_permit_without_calls': true,
        'grpc.http2.max_pings_without_data': 0,
        'grpc.http2.min_time_between_pings_ms':10000,
        'grpc.http2.min_ping_interval_without_data_ms': 5000,
      }
  )
end

https://github.com/Kong/kong/issues/5502

export GRPC_VERBOSITY=debug


server = grpc.server(
    futures.ThreadPoolExecutor(max_workers=10),
    options=(
        ('grpc.keepalive_time_ms', 10000),
        # send keepalive ping every 10 second, default is 2 hours
        ('grpc.keepalive_timeout_ms', 5000),
        # keepalive ping time out after 5 seconds, default is 20 seoncds
        ('grpc.keepalive_permit_without_calls', True),
        # allow keepalive pings when there's no gRPC calls
        ('grpc.http2.max_pings_without_data', 0),
        # allow unlimited amount of keepalive pings without data
        ('grpc.http2.min_time_between_pings_ms', 10000),
        # allow grpc pings from client every 10 seconds
        ('grpc.http2.min_ping_interval_without_data_ms',  5000),
        # allow grpc pings from client without data every 5 seconds
    )
)
On the client- side, we change the client initializer code to include keepalive options:

def connect!
  @stub = Stub.new(
      'localhost:50051', :this_channel_is_insecure,
      channel_args: {
        'grpc.keepalive_time_ms': 10000,
        'grpc.keepalive_timeout_ms': 5000,
        'grpc.keepalive_permit_without_calls': true,
        'grpc.http2.max_pings_without_data': 0,
        'grpc.http2.min_time_between_pings_ms':10000,
        'grpc.http2.min_ping_interval_without_data_ms': 5000,
      }
  )
end