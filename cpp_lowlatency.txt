--------------------------------------------------
pow can be slow massively
--------------------------------------------------
std::function may allocate memory
--------------------------------------------------
no string optimization in gcc < 5.1 and redhat
--------------------------------------------------
placement new does null pointer check in GCC < 7.1 and without c++17
--------------------------------------------------
always_inline and noinline atrributes better then inline
--------------------------------------------------
__builtin_expect
----------------------------
cache L3 can be disabled
----------------------------
gperf - perfect function generator
----------------------------
_COARSE clock_gettime does not do a kernel mode switch
------------
 -ffast-math improves math ops performance by compromising precision. speeds up pow
------------------------------
In order to effectively write your code to take advantage of these rules, when writing if-else or switch statements, check the most common cases first and work progressively down to the least common
--------------------
 static_assert(
      (kMaxCpus & (kMaxCpus - 1)) == 0,
      "kMaxCpus should be a power of two so modulo is fast")

then module could be done like x & (b - 1)

but carefull abotu sequence points! readPos = ++readPos & (N - 1); - BUG!
shall be readPos++; readPos = readPos & (N - 1)
---------------------
Pause prevents speculative execution, eliminating the branch misprediction penalty
---------------------------

trivial classes/structs can be copied with memcpy which is an important optimization!
pair and tuple are not trivial classes!

standart layoout classes can be used in other programming languages!

Every copy constructor is trivial or deleted
Every move constructor is trivial or deleted
Every copy assignment operator is trivial or deleted
Every move assignment operator is trivial or deleted
at least one copy constructor, move constructor, copy assignment operator, or move assignment operator is non-deleted
Trivial non-deleted destructor
This implies that the class has no virtual functions or virtual base classes.

