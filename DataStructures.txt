Bloom filter
-------------
 If bloom filter says it hasn't seen a value, then it definitely hasn't seen it. 
But if it says it has seen a value, there is a good probability it has (but not guaranteed)
it just maintains a N-bit array and for a given key there are m-hash functions to map the key into the N-bit array.
----------
suffix tree
fusion tree
segment tree
pairing heap
Judy arrays
-----------
Radix tree
  PATRICIA 
  HAT-trie
--------
In graph theory, a bridge, isthmus, cut-edge, or cut arc is an edge of a graph whose deletion increases its number of connected components.[1] Equivalently, an edge is a bridge if and only if it is not contained in any cycle. A graph is said to be bridgeless or isthmus-free if it contains no bridges.
--------------------
BTREE
         Split!
 p1 p2      p1 (`p2) \ p2
c1 c2 c3   c1 (`c2) (`c2) \ c3

 p1     (`p1) \ p1
c1 c2  (`c1) (`c1) \  c2
--------------
Union find. Quick intuition is to map values to indecies in an array and treat connected components as directed grapth where childs POINT to parent! Root defines the connected component and idea is to reach the root when finding. To union just link root of second node (value) to the root of the first value - well better smaller trees to bigger one! Also they can be compressed on find operation as the flatter tree is the better!
------
In a simple case, the intervals do not overlap and they can be inserted into a simple binary search tree and queried in O(log n) time. However, with arbitrarily overlapping intervals, there is no way to compare two intervals for insertion into the tree since orderings sorted by the beginning points or the ending points may be different. A naive approach might be to build two parallel trees, one ordered by the beginning point, and one ordered by the ending point of each interval. This allows discarding half of each tree in O(log n) time, but the results must be merged, requiring O(n) time. This gives us queries in O(n + log n) = O(n), which is no better than brute-force
---------------
A tree is a connected, acyclic graph that consists of n nodes and n-1 edges.
Dimater of the tree is the longest path ever through the tree!

Another efficient way to calculate the diameter of a tree is based on two depthfirst
searches. First, we choose an arbitrary node a in the tree and find the
farthest node b from a. Then, we find the farthest node c from b. The diameter
of the tree is the distance between b and c.
-------------------------------------------------------
A spanning tree of a graph consists of all nodes of the graph and some of the
edges of the graph so that there is a path between any two nodes. Like trees
in general, spanning trees are connected and acyclic.

To find minimum spanning tree for undirected grapth, Kruskal or Prim algorithms can be used! To find minimum spanning tree for directed grapth Chuï¿½Liu/Edmonds can be used.

---------------------------------
binary indexed tree (Fenwick tree)
used to represent an array and prefix sum all together to have an element update and prefix sum update at (O*LogN)
-------------
Hashtables
-----------
Collision resolution
-->Separate chaining<---
(1) separate chaining with linked lists
(2) Separate chaining with list head cells
(3) Separate chaining with other structures

2-choice hashing employs two different hash functions, h1(x) and h2(x), for the hash table. Both hash functions are used to compute two table locations. When an object is inserted in the table, it is placed in the table location that contains fewer objects (with the default being the h1(x) table location if there is equality in bucket size). 2-choice hashing employs the principle of the power of two choices

-->Open Addressing<---
(1) coalesced hashing
A hybrid of chaining and open addressing, coalesced hashing links together chains of nodes within the table itself.[18] Like open addressing, it achieves space usage and (somewhat diminished) cache advantages over chaining. Like chaining, it does not exhibit clustering effects; in fact, the table can be efficiently filled to a high density. Unlike chaining, it cannot have more elements than table slots.
(2) Cuckoo hashing
uses few hash functions in turns. if there is a collision still, it would move
collided item at a free spot in the table!
(3)  Hopscotch hashing
combines the approaches of cuckoo hashing and linear probing
search is limited to the number of entries in this neighborhood, 
which is logarithmic in the worst case. If all the buckets in the neigbourhood are occupied
it would find an empty slot using linear pobing and move it to our neibouhood!

