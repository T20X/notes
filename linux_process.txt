
----------------
A process can begin executing in kernel-space only through one of the following well-defined interfaces:

System calls
Exception handlers

------------------------------
Kernel threads do not have an address space. Their mm pointer, which points at their address space, is NULL.
Kernel threads operate only in kernel-space and do not context switch into user-space.  
Kernel threads are schedulable and preemptable.

--------------
Linux, aiming to provide good interactive response and desktop performance, optimizes for process response (low latency), thus favoring I/O-bound processes over processor-bound processes. This is done in a creative manner that does not neglect processor-bound processes
-------------

The Linux kernel implements two separate priority ranges:

nice value (a number from –20 to +19 with a default of 0) is the standard priority range used in all Unix systems:
Processes with a lower nice value (higher priority) receive a larger proportion of the system's processor, and vice versa.
In Linux, the nice value is a control over the proportion of timeslice. In other Unix-based systems, such as Mac OS X, the nice value is a control over the absolute timeslice allotted to a process;
The ps -el command lists processes with their nice values.
Real-time priority (configurable values that by default range from 0 to 99)
Higher real-time priority values correspond to a greater priority.
All real-time processes are at a higher priority than normal processes.
Linux implements real-time priorities in accordance with the relevant Unix standards, specifically POSIX.1b.
The ps -eo state,uid,pid,ppid,rtprio,time,comm command lists processes and their real-time priority. A value of “-” means the process is not real-time.


